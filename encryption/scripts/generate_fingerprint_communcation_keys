#!/bin/bash

# Start the TPM
tpm2_startup -c

# Flush transient objects to save memory
tpm2_flushcontext -t

# Create primary key of the hierarchy
tpm2_createprimary -C o -G rsa -c primary.ctx

# Create Raspberry Pi RSA key pair for secure communication with the Fingerprint Sensor
tpm2_create -C primary.ctx -u raspberry_key.pub -r raspberry_key.priv

# Flush transient objects to save memory
tpm2_flushcontext -t

# Load the newly created key
tpm2_load -C primary.ctx -u raspberry_key.pub -r raspberry_key.priv -c raspberry_key.ctx

# Remove previous contents of this memory location (done quietly as error messages are normal)
tpm2_evictcontrol -C o -c 0x81010002 2> /dev/null

# Make it persistent between reboots
tpm2_evictcontrol -C o -c raspberry_key.ctx 0x81010002


# Flush transient objects to save memory
tpm2_flushcontext -t


# Create Fingerprint Sensor RSA key pair for secure communication with the Raspberry Pi
# (Would ordinarily be imported externally, as the fingerprint sensor would have its own TPM in a real implementation)
tpm2_create -C primary.ctx -u fingerprint_key.pub -r fingerprint_key.priv

# Flush transient objects to save memory
tpm2_flushcontext -t

# Load the newly created key
tpm2_load -C primary.ctx -u fingerprint_key.pub -r fingerprint_key.priv -c fingerprint_key.ctx

# Remove previous contents of this memory location (done quietly as error messages are normal)
tpm2_evictcontrol -C o -c 0x81010003 2> /dev/null

# Make it persistent between reboots
tpm2_evictcontrol -C o -c fingerprint_key.ctx 0x81010003


# Delete temporary files e.g. key context files
rm primary.ctx
rm raspberry_key.pub raspberry_key.priv raspberry_key.ctx
rm fingerprint_key.pub fingerprint_key.priv fingerprint_key.ctx