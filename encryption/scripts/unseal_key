#!/bin/bash

# Start the TPM
tpm2_startup -c

# Flush transient objects to save memory
tpm2_flushcontext -t

# Create primary key of the hierarchy
tpm2_createprimary -C o -g sha256 -G rsa -c primary.ctx


# Specify the passcode used to access the key
passcode=$1

# Hash the passcode with sha256
echo ""
echo "- Passcode hash:"
passcodehash=$(echo $passcode | tpm2_hash -g sha256 -C o --hex)
echo $passcodehash

# Extend PCR 23 with the passcode hash
tpm2_pcrextend 23:sha256=$passcodehash

# Begin a real policy session
tpm2_startauthsession --policy-session -S session.ctx

# Add a policy event based on the value of PCR number 23
echo ""
echo "- PCR Policy event (real):"
tpm2_policypcr -S session.ctx -l sha256:23 -L policy

# Delete policy definition file
rm policy

# Reset PCR-23, ready for unsealing
tpm2_pcrreset 23

# Unseal the AES key from sealing key
echo ""
echo "- Unseal the AES key from sealing key:"
tpm2_unseal -p session:session.ctx -c 0x81010001 > aeskey_hex

# Close the trial policy session
tpm2_flushcontext session.ctx

# Delete policy session context file
rm session.ctx

# Read the aeskey as text from a hex file
aeskey=$(xxd -p -c 32 aeskey_hex)
echo ""
echo "AES key:"
echo $aeskey

# Delete the AES key output file
rm aeskey_hex